{"version":3,"sources":["2-molecules/contact-form/contact-form-basic/_contact.scss","../../base/source/0-base/1-tools/scss/_grid.scss","contact-form.css"],"names":[],"mappings":";AASE;ECyBA,mCAAA;ACmBF;ADhBE;EAEE,iCAAA;EAiBA,kBAAA;EAIA,WAAA;EACA,4BAAA;ACHJ;AFtCI;ECcF,4BAAA;ACoDF;ADjDE;EAEE,0BAAA;EAiBA,kBAAA;EAIA,WAAA;EACA,4BAAA;AC8BJ","file":"contact-form.css","sourcesContent":["/**\n * ## Contact Forms\n */\n\n@use '@rm-frontend/base/source/0-base/1-tools/scss/button';\n@use '@rm-frontend/base/source/0-base/1-tools/scss/grid';\n@use 'settings/base';\n\n.contact {\n  &__wrap {\n    @include grid.grid-container(1.5rem);\n  }\n\n  &__context {\n    font-size: base.$font-size-small;\n    line-height: base.$line-height-small;\n    word-wrap: break-word;\n\n    @include grid.grid-break-at(700px, 12, 3);\n\n    &__wrap {\n      @include grid.grid-container;\n\n      align-items: flex-start;\n    }\n\n    &__img {\n      @include grid.grid-break-at(270px, 12, 4);\n\n      > img {\n        width: 100%;\n      }\n    }\n\n    &__text {\n      @include grid.grid-break-at(300px, 12, 8);\n    }\n  }\n\n  &__form {\n    @include grid.grid-break-at(650px, 12, 9);\n  }\n\n  #emailcheck {\n    display: none;\n  }\n\n  .button {\n    .template__sidebar & {\n      @include button.button--small;\n    }\n  }\n}\n\n.contact-form-expanded--location {\n  display: flex;\n  flex-flow: row wrap;\n\n  .form-row {\n    flex-grow: 1;\n\n    &:first-child {\n      margin-right: 0.5rem;\n    }\n\n    &:last-child {\n      margin-left: 0.5rem;\n    }\n  }\n}\n","@use '../../0-settings/const';\n@use 'settings/global';\n\n@mixin outer-container() {\n  max-width: global.$grid__max-width;\n  margin: auto;\n  position: relative;\n  box-sizing: border-box;\n}\n\n\n\n/**\n * container mixins\n */\n\n@mixin grid-visual($gutter: global.$grid__gutter, $color: papayawhip) {\n  $gradient: (\n    to right,\n    transparent,\n    transparent $gutter,\n    $color $gutter,\n    $color percentage(1/const.$grid__columns)\n  );\n\n  background-position-x: $gutter / -2;\n  background-image: repeating-linear-gradient($gradient);\n}\n\n@mixin grid-gutter($gutter: global.$grid__gutter) {\n  // margin-/padding-right is set to 0 to avoid horizontal scrollbars\n  // @see https://www.rawkblog.com/2019/01/flexbox-gutters-negative-margins-solved/\n\n  /* critical:start */\n  margin: $gutter/-2 0 $gutter/-2 $gutter*-1;\n  /* critical:end */\n\n  > * {\n    /* critical:start */\n    padding: $gutter/2 0 $gutter/2 $gutter;\n    /* critical:end */\n  }\n}\n\n@mixin grid-container($gutter: global.$grid__gutter) {\n  /* critical:start */\n  @include grid-gutter($gutter);\n\n  display: flex;\n  flex-wrap: wrap;\n  min-width: 100%;\n  box-sizing: border-box;\n  /* critical:end */\n\n  > * {\n    /* critical:start */\n    position: relative;\n    // Prevent columns from becoming too narrow when at smaller grid tiers by\n    // always setting `width: 100%;`. This works because we use `flex` values\n    // later on to override this initial width.\n    width: 100%;\n    background-clip: content-box;\n    /* critical:end */\n  }\n}\n\n@mixin grid-cols-per-row($cols) {\n  > * {\n    @include grid-cell(percentage(1 / $cols));\n  }\n}\n\n\n\n/**\n * column/cell mixins\n */\n\n@mixin grid-columns($cols) {\n  @include grid-cell(percentage($cols / const.$grid__columns));\n}\n\n@mixin grid-cell($width) {\n  /* critical:start */\n  flex: 0 0 $width;\n  max-width: $width;\n  /* critical:end */\n}\n\n@mixin grid-push($cols) {\n  margin-left: percentage($cols / const.$grid__columns);\n}\n\n/// @see http://www.heydonworks.com/article/the-flexbox-holy-albatross\n/// @param $threshold\n/// @param $max-width width of element when the parent's width is SMALLER than threshold\n/// @param $min-width width of element when the parent's width is BIGGER than threshold\n\n@mixin grid-break-at($threshold, $max-width: 100%, $min-width: false) {\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: calc((#{$threshold} - 100%) * 999);\n\n  @if $min-width {\n    @if unitless($min-width) {\n      $min-width: percentage($min-width / const.$grid__columns);\n    }\n\n    min-width: $min-width;\n  }\n\n  @if $max-width {\n    @if unitless($max-width) {\n      $max-width: percentage($max-width / const.$grid__columns);\n    }\n\n    @if $min-width and unit($max-width) == unit($min-width) and $max-width < $min-width {\n      @error 'max-width has to be greater than min-width';\n    }\n\n    @if $max-width != 100% {\n      // max-width: 100% is the default (caused by flex-grow: 1)\n      max-width: $max-width;\n    }\n  }\n}\n","/* prevent top of anchor target and bottom of header on same position */\n/* stylelint-disable order/properties-alphabetical-order */\n/* stylelint-enable */\n/**\n * # Global z-index defintion\n */\n/**\n * # Selectors\n */\n/**\n * ## Clearlist\n */\n/**\n * ## Vertical Centerer\n */\n/**\n * ## Horzontal Centerer\n */\n/**\n * ## Vertical and Horizontal Centerer\n */\n/**\n * ## Type Reset\n */\n/**\n * ## Don't print\n */\n/**\n * ## Handling Long Words and URLs\n * https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/\n */\n/**\n * # Detect IE Browsers\n */\n/**\n * container mixins\n */\n/**\n * column/cell mixins\n */\n/**\n * ## Contact Forms\n */\n.contact__wrap {\n  /* critical:start */\n  /* critical:start */\n  margin: -0.75rem 0 -0.75rem -1.5rem;\n  /* critical:end */\n  display: flex;\n  flex-wrap: wrap;\n  min-width: 100%;\n  box-sizing: border-box;\n  /* critical:end */\n}\n.contact__wrap > * {\n  /* critical:start */\n  padding: 0.75rem 0 0.75rem 1.5rem;\n  /* critical:end */\n}\n.contact__wrap > * {\n  /* critical:start */\n  position: relative;\n  width: 100%;\n  background-clip: content-box;\n  /* critical:end */\n}\n.contact__context {\n  font-size: 0.8em;\n  line-height: 1.5;\n  word-wrap: break-word;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: calc((700px - 100%) * 999);\n  min-width: 25%;\n}\n.contact__context__wrap {\n  /* critical:start */\n  /* critical:start */\n  margin: -0.5vw 0 -0.5vw -1vw;\n  /* critical:end */\n  display: flex;\n  flex-wrap: wrap;\n  min-width: 100%;\n  box-sizing: border-box;\n  /* critical:end */\n  align-items: flex-start;\n}\n.contact__context__wrap > * {\n  /* critical:start */\n  padding: 0.5vw 0 0.5vw 1vw;\n  /* critical:end */\n}\n.contact__context__wrap > * {\n  /* critical:start */\n  position: relative;\n  width: 100%;\n  background-clip: content-box;\n  /* critical:end */\n}\n.contact__context__img {\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: calc((270px - 100%) * 999);\n  min-width: 33.3333333333%;\n}\n.contact__context__img > img {\n  width: 100%;\n}\n.contact__context__text {\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: calc((300px - 100%) * 999);\n  min-width: 66.6666666667%;\n}\n.contact__form {\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: calc((650px - 100%) * 999);\n  min-width: 75%;\n}\n.contact #emailcheck {\n  display: none;\n}\n.template__sidebar .contact .button {\n  font-size: 0.75em;\n  line-height: 1.2;\n  padding: 0.45em 1em;\n}\n.template__sidebar .contact .button.button--is-loading::after {\n  height: 1.5em;\n  width: 1.5em;\n}\n\n.contact-form-expanded--location {\n  display: flex;\n  flex-flow: row wrap;\n}\n.contact-form-expanded--location .form-row {\n  flex-grow: 1;\n}\n.contact-form-expanded--location .form-row:first-child {\n  margin-right: 0.5rem;\n}\n.contact-form-expanded--location .form-row:last-child {\n  margin-left: 0.5rem;\n}"]}