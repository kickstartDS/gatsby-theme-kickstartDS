{"version":3,"sources":["4-templates/extranet/extranet/_extranet.scss","../../base/source/0-base/1-tools/scss/_grid.scss","extranet.css","<no source>"],"names":[],"mappings":";AAKE;EC+EA,cAAA;EACA,eANmB;ACtDrB;ACzBA;EHKE;IC+EA,wBAAA;IACA,yBANmB;EC9CnB;CCjCF;AAAA;EHKE;IC+EA,aAAA;IACA,cANmB;ECrCnB;CC1CF","file":"extranet.css","sourcesContent":["@use '@rm-frontend/base/source/0-base/1-tools/scss/grid';\n@use '@rm-frontend/base/source/0-base/1-tools/scss/breakpoint';\n@use '@rm-frontend/base/source/0-base/0-settings/selector';\n\n#{selector.$template--content-100} {\n  .extranet-login {\n    @include grid.grid-columns(12);\n\n    @include breakpoint.media('≥s') {\n      @include grid.grid-columns(10);\n      @include grid.grid-push(1);\n    }\n\n    @include breakpoint.media('≥m') {\n      @include grid.grid-columns(6);\n      @include grid.grid-push(3);\n    }\n  }\n}\n","@use '../../0-settings/const';\n@use 'settings/global';\n\n@mixin outer-container() {\n  max-width: global.$grid__max-width;\n  margin: auto;\n  position: relative;\n  box-sizing: border-box;\n}\n\n\n\n/**\n * container mixins\n */\n\n@mixin grid-visual($gutter: global.$grid__gutter, $color: papayawhip) {\n  $gradient: (\n    to right,\n    transparent,\n    transparent $gutter,\n    $color $gutter,\n    $color percentage(1/const.$grid__columns)\n  );\n\n  background-position-x: $gutter / -2;\n  background-image: repeating-linear-gradient($gradient);\n}\n\n@mixin grid-gutter($gutter: global.$grid__gutter) {\n  // margin-/padding-right is set to 0 to avoid horizontal scrollbars\n  // @see https://www.rawkblog.com/2019/01/flexbox-gutters-negative-margins-solved/\n\n  /* critical:start */\n  margin: $gutter/-2 0 $gutter/-2 $gutter*-1;\n  /* critical:end */\n\n  > * {\n    /* critical:start */\n    padding: $gutter/2 0 $gutter/2 $gutter;\n    /* critical:end */\n  }\n}\n\n@mixin grid-container($gutter: global.$grid__gutter) {\n  /* critical:start */\n  @include grid-gutter($gutter);\n\n  display: flex;\n  flex-wrap: wrap;\n  min-width: 100%;\n  box-sizing: border-box;\n  /* critical:end */\n\n  > * {\n    /* critical:start */\n    position: relative;\n    // Prevent columns from becoming too narrow when at smaller grid tiers by\n    // always setting `width: 100%;`. This works because we use `flex` values\n    // later on to override this initial width.\n    width: 100%;\n    background-clip: content-box;\n    /* critical:end */\n  }\n}\n\n@mixin grid-cols-per-row($cols) {\n  > * {\n    @include grid-cell(percentage(1 / $cols));\n  }\n}\n\n\n\n/**\n * column/cell mixins\n */\n\n@mixin grid-columns($cols) {\n  @include grid-cell(percentage($cols / const.$grid__columns));\n}\n\n@mixin grid-cell($width) {\n  /* critical:start */\n  flex: 0 0 $width;\n  max-width: $width;\n  /* critical:end */\n}\n\n@mixin grid-push($cols) {\n  margin-left: percentage($cols / const.$grid__columns);\n}\n\n/// @see http://www.heydonworks.com/article/the-flexbox-holy-albatross\n/// @param $threshold\n/// @param $max-width width of element when the parent's width is SMALLER than threshold\n/// @param $min-width width of element when the parent's width is BIGGER than threshold\n\n@mixin grid-break-at($threshold, $max-width: 100%, $min-width: false) {\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: calc((#{$threshold} - 100%) * 999);\n\n  @if $min-width {\n    @if unitless($min-width) {\n      $min-width: percentage($min-width / const.$grid__columns);\n    }\n\n    min-width: $min-width;\n  }\n\n  @if $max-width {\n    @if unitless($max-width) {\n      $max-width: percentage($max-width / const.$grid__columns);\n    }\n\n    @if $min-width and unit($max-width) == unit($min-width) and $max-width < $min-width {\n      @error 'max-width has to be greater than min-width';\n    }\n\n    @if $max-width != 100% {\n      // max-width: 100% is the default (caused by flex-grow: 1)\n      max-width: $max-width;\n    }\n  }\n}\n",".extranet-login .typo3-messages {\n  list-style: none;\n  padding-left: 0;\n}\n\n/* prevent top of anchor target and bottom of header on same position */\n/* stylelint-disable order/properties-alphabetical-order */\n/* stylelint-enable */\n/**\n * # Global z-index defintion\n */\n/**\n * container mixins\n */\n/**\n * column/cell mixins\n */\n/**\n * # Selectors\n */\n.template--content-100 .extranet-login {\n  /* critical:start */\n  flex: 0 0 100%;\n  max-width: 100%;\n  /* critical:end */\n}\n@media (min-width: 40em) {\n  .template--content-100 .extranet-login {\n    /* critical:start */\n    flex: 0 0 83.3333333333%;\n    max-width: 83.3333333333%;\n    /* critical:end */\n    margin-left: 8.3333333333%;\n  }\n}\n@media (min-width: 60em) {\n  .template--content-100 .extranet-login {\n    /* critical:start */\n    flex: 0 0 50%;\n    max-width: 50%;\n    /* critical:end */\n    margin-left: 25%;\n  }\n}",null]}