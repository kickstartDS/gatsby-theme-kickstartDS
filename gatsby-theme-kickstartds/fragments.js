import { graphql } from "gatsby";

export const fragments = graphql`
  # THIS FILE HAS BEEN AUTO-GENERATED BY "graphql-cli-generate-fragments"
  # DO NOT EDIT THIS FILE DIRECTLY

  # Standard Fragments
  # Nested fragments will spread one layer deep


  fragment ButtonComponent on ButtonComponent {
    label
    variant
    size
    className
    icon {
      ...IconComponentNoNesting
    }
    iconBefore
    iconAfter
    dataComponent
    fillAnimation
    iconAnimation
    type
    value
    name
    disabled
  }

  fragment IconComponent on IconComponent {
    icon
    role
    className
    type
  }

  fragment ContentBoxComponent on ContentBoxComponent {
    ratio
    alignement
    image
    topic
    text
    link {
      ...ContentBoxComponentLinkNoNesting
    }
    type
  }

  fragment ContentBoxComponentLink on ContentBoxComponentLink {
    enabled
  }

  fragment HeadlineComponent on HeadlineComponent {
    level
    align
    content
    subheadline
    spaceAfter
    pageHeader
    type
  }

  fragment LightboxLazyImageComponent on LightboxLazyImageComponent {
    thumb
    image
    width
    height
    zoomIcon
    caption
    hideCaption
    gallery
    id
    class
    type
  }

  fragment LinkButtonComponent on LinkButtonComponent {
    label
    variant
    size
    className
    icon {
      ...IconComponentNoNesting
    }
    iconBefore
    iconAfter
    dataComponent
    fillAnimation
    iconAnimation
    type
    href
    newTab
  }

  fragment PictureComponent on PictureComponent {
    src
    srcSet
    alt
    width
    height
    className
    id
    itemProp
    style
    objectFit
    noscript
    lazy
    sources {
      ...PictureComponentSourcesNoNesting
    }
    pictureClassName
    type
  }

  fragment PictureComponentSources on PictureComponentSources {
    srcSet
    media
    type
  }

  fragment Container on Container {
    width
    gutter
    mode
    type
  }

  fragment QuotesSliderComponent on QuotesSliderComponent {
    slides {
      ...QuoteComponentNoNesting
    }
    type
  }

  fragment QuoteComponent on QuoteComponent {
    image
    text
    source
    date
    type
  }

  fragment ToggleComponent on ToggleComponent {
    id
    name
    checked
    disabled
    type
  }

  fragment TagLabelComponent on TagLabelComponent {
    label
    size
    link
    removable
    type
  }

  fragment VisualComponent on VisualComponent {
    height
    media {
      ...VisualComponentMediaNoNesting
    }
    overlay
    box {
      ...VisualComponentBoxNoNesting
    }
    backgroundColor
    inbox
    skipButton
    className
    type
  }

  fragment VisualComponentMedia on VisualComponentMedia {
    mode
    image {
      ...VisualComponentMediaImageNoNesting
    }
    video {
      ...VisualComponentMediaVideoNoNesting
    }
  }

  fragment VisualComponentMediaImage on VisualComponentMediaImage {
    srcMobile
    srcTablet
    srcDesktop
    indent
  }

  fragment VisualComponentMediaVideo on VisualComponentMediaVideo {
    srcMobile
    srcTablet
    srcDesktop
  }

  fragment VisualComponentBox on VisualComponentBox {
    enabled
    headline
    text
    link {
      ...VisualComponentBoxLinkNoNesting
    }
    indent
    horizontal
    vertical
    background
  }

  fragment VisualComponentBoxLink on VisualComponentBoxLink {
    enabled
  }

  fragment VisualSliderComponent on VisualSliderComponent {
    autoplay
    type
  }

  fragment VisualSliderComponentSlides on VisualSliderComponentSlides {
    height
    media {
      ...VisualSliderComponentSlidesMediaNoNesting
    }
    overlay
    box {
      ...VisualSliderComponentSlidesBoxNoNesting
    }
    backgroundColor
    inbox
    skipButton
    className
    type
    label
  }

  fragment VisualSliderComponentSlidesMedia on VisualSliderComponentSlidesMedia {
    mode
    image {
      ...VisualSliderComponentSlidesMediaImageNoNesting
    }
    video {
      ...VisualSliderComponentSlidesMediaVideoNoNesting
    }
  }

  fragment VisualSliderComponentSlidesMediaImage on VisualSliderComponentSlidesMediaImage {
    srcMobile
    srcTablet
    srcDesktop
    indent
  }

  fragment VisualSliderComponentSlidesMediaVideo on VisualSliderComponentSlidesMediaVideo {
    srcMobile
    srcTablet
    srcDesktop
  }

  fragment VisualSliderComponentSlidesBox on VisualSliderComponentSlidesBox {
    enabled
    headline
    text
    link {
      ...VisualSliderComponentSlidesBoxLinkNoNesting
    }
    indent
    horizontal
    vertical
    background
  }

  fragment VisualSliderComponentSlidesBoxLink on VisualSliderComponentSlidesBoxLink {
    enabled
  }

  fragment ContactComponent on ContactComponent {
    title
    subtitle
    phone
    email
    copy
    type
  }

  fragment StorytellingComponent on StorytellingComponent {
    backgroundImage
    backgroundColor
    full
    image {
      ...StorytellingComponentImageNoNesting
    }
    box {
      ...StorytellingComponentBoxNoNesting
    }
    type
  }

  fragment StorytellingComponentImage on StorytellingComponentImage {
    source
    ratio
    vAlign
    hAlign
    order {
      ...StorytellingComponentImageOrderNoNesting
    }
  }

  fragment StorytellingComponentImageOrder on StorytellingComponentImageOrder {
    mobileImageLast
    desktopImageLast
  }

  fragment StorytellingComponentBox on StorytellingComponentBox {
    headline {
      ...HeadlineComponentNoNesting
    }
    text
    textAlign
    textColor
    vAlign
    hAlign
    link {
      ...LinkButtonComponentNoNesting
    }
  }

  fragment CollapsibleBoxComponent on CollapsibleBoxComponent {
    summary
    text
    type
  }

  fragment CountUpComponent on CountUpComponent {
    to
    icon {
      ...IconComponentNoNesting
    }
    topic
    text
    link {
      ...LinkButtonComponentNoNesting
    }
    type
  }

  fragment TextMediaComponent on TextMediaComponent {
    text
    mediaAlignment
    type
  }

  fragment TextMediaComponentMedia0 on TextMediaComponentMedia0 {
    video {
      ...TextMediaComponentMedia0VideoNoNesting
    }
    full
  }

  fragment TextMediaComponentMedia0Video on TextMediaComponentMedia0Video {
    src
    iframe
    title
    width
    height
  }

  fragment TextMediaComponentMedia1 on TextMediaComponentMedia1 {
    image {
      ...PictureComponentNoNesting
    }
    full
  }

  fragment TextMediaComponentMedia2 on TextMediaComponentMedia2 {
    lightboxImage {
      ...LightboxLazyImageComponentNoNesting
    }
    full
  }

  fragment TeaserBoxComponent on TeaserBoxComponent {
    topic
    text
    darkStyle
    link {
      ...TeaserBoxComponentLinkNoNesting
    }
    type
    image
    ratio
    imageSpacing
  }

  fragment TeaserBoxComponentLink on TeaserBoxComponentLink {
    hidden
  }

  fragment TeaserRowComponent on TeaserRowComponent {
    topic
    text
    darkStyle
    link {
      ...TeaserRowComponentLinkNoNesting
    }
    type
  }

  fragment TeaserRowComponentLink on TeaserRowComponentLink {
    hidden
  }

  fragment SectionComponent on SectionComponent {
    width
    gutter
    mode
    type
    background
    spaceBefore
    spaceAfter
    headline {
      ...HeadlineComponentNoNesting
    }
  }

  fragment Slide on Slide {
    slideComponent
    previewComponent
    previewLabel
    type
  }

  fragment SliderComponent on SliderComponent {
    autoplay
    className
    component
    arrows
    type
  }

  fragment TeaserComponent on TeaserComponent {
    topic
    text
    darkStyle
    link {
      ...TeaserComponentLinkNoNesting
    }
    type
  }

  fragment TeaserComponentLink on TeaserComponentLink {
    hidden
  }

  fragment VisualSlidePreviewComponent on VisualSlidePreviewComponent {
    previewLabel
    type
  }


  # No Relational objects
  # No nested fragments


  fragment ButtonComponentNoNesting on ButtonComponent {
    label
    variant
    size
    className
    iconBefore
    iconAfter
    dataComponent
    fillAnimation
    iconAnimation
    type
    value
    name
    disabled
  }

  fragment IconComponentNoNesting on IconComponent {
    icon
    role
    className
    type
  }

  fragment ContentBoxComponentNoNesting on ContentBoxComponent {
    ratio
    alignement
    image
    topic
    text
    type
  }

  fragment ContentBoxComponentLinkNoNesting on ContentBoxComponentLink {
    enabled
  }

  fragment HeadlineComponentNoNesting on HeadlineComponent {
    level
    align
    content
    subheadline
    spaceAfter
    pageHeader
    type
  }

  fragment LightboxLazyImageComponentNoNesting on LightboxLazyImageComponent {
    thumb
    image
    width
    height
    zoomIcon
    caption
    hideCaption
    gallery
    id
    class
    type
  }

  fragment LinkButtonComponentNoNesting on LinkButtonComponent {
    label
    variant
    size
    className
    iconBefore
    iconAfter
    dataComponent
    fillAnimation
    iconAnimation
    type
    href
    newTab
  }

  fragment PictureComponentNoNesting on PictureComponent {
    src
    srcSet
    alt
    width
    height
    className
    id
    itemProp
    style
    objectFit
    noscript
    lazy
    pictureClassName
    type
  }

  fragment PictureComponentSourcesNoNesting on PictureComponentSources {
    srcSet
    media
    type
  }

  fragment ContainerNoNesting on Container {
    width
    gutter
    mode
    type
  }

  fragment QuotesSliderComponentNoNesting on QuotesSliderComponent {
    type
  }

  fragment QuoteComponentNoNesting on QuoteComponent {
    image
    text
    source
    date
    type
  }

  fragment ToggleComponentNoNesting on ToggleComponent {
    id
    name
    checked
    disabled
    type
  }

  fragment TagLabelComponentNoNesting on TagLabelComponent {
    label
    size
    link
    removable
    type
  }

  fragment VisualComponentNoNesting on VisualComponent {
    height
    overlay
    backgroundColor
    inbox
    skipButton
    className
    type
  }

  fragment VisualComponentMediaNoNesting on VisualComponentMedia {
    mode
  }

  fragment VisualComponentMediaImageNoNesting on VisualComponentMediaImage {
    srcMobile
    srcTablet
    srcDesktop
    indent
  }

  fragment VisualComponentMediaVideoNoNesting on VisualComponentMediaVideo {
    srcMobile
    srcTablet
    srcDesktop
  }

  fragment VisualComponentBoxNoNesting on VisualComponentBox {
    enabled
    headline
    text
    indent
    horizontal
    vertical
    background
  }

  fragment VisualComponentBoxLinkNoNesting on VisualComponentBoxLink {
    enabled
  }

  fragment VisualSliderComponentNoNesting on VisualSliderComponent {
    autoplay
    type
  }

  fragment VisualSliderComponentSlidesNoNesting on VisualSliderComponentSlides {
    height
    overlay
    backgroundColor
    inbox
    skipButton
    className
    type
    label
  }

  fragment VisualSliderComponentSlidesMediaNoNesting on VisualSliderComponentSlidesMedia {
    mode
  }

  fragment VisualSliderComponentSlidesMediaImageNoNesting on VisualSliderComponentSlidesMediaImage {
    srcMobile
    srcTablet
    srcDesktop
    indent
  }

  fragment VisualSliderComponentSlidesMediaVideoNoNesting on VisualSliderComponentSlidesMediaVideo {
    srcMobile
    srcTablet
    srcDesktop
  }

  fragment VisualSliderComponentSlidesBoxNoNesting on VisualSliderComponentSlidesBox {
    enabled
    headline
    text
    indent
    horizontal
    vertical
    background
  }

  fragment VisualSliderComponentSlidesBoxLinkNoNesting on VisualSliderComponentSlidesBoxLink {
    enabled
  }

  fragment ContactComponentNoNesting on ContactComponent {
    title
    subtitle
    phone
    email
    copy
    type
  }

  fragment StorytellingComponentNoNesting on StorytellingComponent {
    backgroundImage
    backgroundColor
    full
    type
  }

  fragment StorytellingComponentImageNoNesting on StorytellingComponentImage {
    source
    ratio
    vAlign
    hAlign
  }

  fragment StorytellingComponentImageOrderNoNesting on StorytellingComponentImageOrder {
    mobileImageLast
    desktopImageLast
  }

  fragment StorytellingComponentBoxNoNesting on StorytellingComponentBox {
    text
    textAlign
    textColor
    vAlign
    hAlign
  }

  fragment CollapsibleBoxComponentNoNesting on CollapsibleBoxComponent {
    summary
    text
    type
  }

  fragment CountUpComponentNoNesting on CountUpComponent {
    to
    topic
    text
    type
  }

  fragment TextMediaComponentNoNesting on TextMediaComponent {
    text
    mediaAlignment
    type
  }

  fragment TextMediaComponentMedia0NoNesting on TextMediaComponentMedia0 {
    full
  }

  fragment TextMediaComponentMedia0VideoNoNesting on TextMediaComponentMedia0Video {
    src
    iframe
    title
    width
    height
  }

  fragment TextMediaComponentMedia1NoNesting on TextMediaComponentMedia1 {
    full
  }

  fragment TextMediaComponentMedia2NoNesting on TextMediaComponentMedia2 {
    full
  }

  fragment TeaserBoxComponentNoNesting on TeaserBoxComponent {
    topic
    text
    darkStyle
    type
    image
    ratio
    imageSpacing
  }

  fragment TeaserBoxComponentLinkNoNesting on TeaserBoxComponentLink {
    hidden
  }

  fragment TeaserRowComponentNoNesting on TeaserRowComponent {
    topic
    text
    darkStyle
    type
  }

  fragment TeaserRowComponentLinkNoNesting on TeaserRowComponentLink {
    hidden
  }

  fragment SectionComponentNoNesting on SectionComponent {
    width
    gutter
    mode
    type
    background
    spaceBefore
    spaceAfter
  }

  fragment SlideNoNesting on Slide {
    slideComponent
    previewComponent
    previewLabel
    type
  }

  fragment SliderComponentNoNesting on SliderComponent {
    autoplay
    className
    component
    arrows
    type
  }

  fragment TeaserComponentNoNesting on TeaserComponent {
    topic
    text
    darkStyle
    type
  }

  fragment TeaserComponentLinkNoNesting on TeaserComponentLink {
    hidden
  }

  fragment VisualSlidePreviewComponentNoNesting on VisualSlidePreviewComponent {
    previewLabel
    type
  }


  # Deeply nested Fragments
  # Will include n nested fragments
  # If there is a recursive relation you will receive a
  # "Cannot spread fragment within itself" error when using


  fragment ButtonComponentDeepNesting on ButtonComponent {
    label
    variant
    size
    className
    icon {
      ...IconComponentDeepNesting
    }
    iconBefore
    iconAfter
    dataComponent
    fillAnimation
    iconAnimation
    type
    value
    name
    disabled
  }

  fragment IconComponentDeepNesting on IconComponent {
    icon
    role
    className
    type
  }

  fragment ContentBoxComponentDeepNesting on ContentBoxComponent {
    ratio
    alignement
    image
    topic
    text
    link {
      ...ContentBoxComponentLinkDeepNesting
    }
    type
  }

  fragment ContentBoxComponentLinkDeepNesting on ContentBoxComponentLink {
    enabled
  }

  fragment HeadlineComponentDeepNesting on HeadlineComponent {
    level
    align
    content
    subheadline
    spaceAfter
    pageHeader
    type
  }

  fragment LightboxLazyImageComponentDeepNesting on LightboxLazyImageComponent {
    thumb
    image
    width
    height
    zoomIcon
    caption
    hideCaption
    gallery
    id
    class
    type
  }

  fragment LinkButtonComponentDeepNesting on LinkButtonComponent {
    label
    variant
    size
    className
    icon {
      ...IconComponentDeepNesting
    }
    iconBefore
    iconAfter
    dataComponent
    fillAnimation
    iconAnimation
    type
    href
    newTab
  }

  fragment PictureComponentDeepNesting on PictureComponent {
    src
    srcSet
    alt
    width
    height
    className
    id
    itemProp
    style
    objectFit
    noscript
    lazy
    sources {
      ...PictureComponentSourcesDeepNesting
    }
    pictureClassName
    type
  }

  fragment PictureComponentSourcesDeepNesting on PictureComponentSources {
    srcSet
    media
    type
  }

  fragment ContainerDeepNesting on Container {
    width
    gutter
    mode
    type
  }

  fragment QuotesSliderComponentDeepNesting on QuotesSliderComponent {
    slides {
      ...QuoteComponentDeepNesting
    }
    type
  }

  fragment QuoteComponentDeepNesting on QuoteComponent {
    image
    text
    source
    date
    type
  }

  fragment ToggleComponentDeepNesting on ToggleComponent {
    id
    name
    checked
    disabled
    type
  }

  fragment TagLabelComponentDeepNesting on TagLabelComponent {
    label
    size
    link
    removable
    type
  }

  fragment VisualComponentDeepNesting on VisualComponent {
    height
    media {
      ...VisualComponentMediaDeepNesting
    }
    overlay
    box {
      ...VisualComponentBoxDeepNesting
    }
    backgroundColor
    inbox
    skipButton
    className
    type
  }

  fragment VisualComponentMediaDeepNesting on VisualComponentMedia {
    mode
    image {
      ...VisualComponentMediaImageDeepNesting
    }
    video {
      ...VisualComponentMediaVideoDeepNesting
    }
  }

  fragment VisualComponentMediaImageDeepNesting on VisualComponentMediaImage {
    srcMobile
    srcTablet
    srcDesktop
    indent
  }

  fragment VisualComponentMediaVideoDeepNesting on VisualComponentMediaVideo {
    srcMobile
    srcTablet
    srcDesktop
  }

  fragment VisualComponentBoxDeepNesting on VisualComponentBox {
    enabled
    headline
    text
    link {
      ...VisualComponentBoxLinkDeepNesting
    }
    indent
    horizontal
    vertical
    background
  }

  fragment VisualComponentBoxLinkDeepNesting on VisualComponentBoxLink {
    enabled
  }

  fragment VisualSliderComponentDeepNesting on VisualSliderComponent {
    autoplay
    type
  }

  fragment VisualSliderComponentSlidesDeepNesting on VisualSliderComponentSlides {
    height
    media {
      ...VisualSliderComponentSlidesMediaDeepNesting
    }
    overlay
    box {
      ...VisualSliderComponentSlidesBoxDeepNesting
    }
    backgroundColor
    inbox
    skipButton
    className
    type
    label
  }

  fragment VisualSliderComponentSlidesMediaDeepNesting on VisualSliderComponentSlidesMedia {
    mode
    image {
      ...VisualSliderComponentSlidesMediaImageDeepNesting
    }
    video {
      ...VisualSliderComponentSlidesMediaVideoDeepNesting
    }
  }

  fragment VisualSliderComponentSlidesMediaImageDeepNesting on VisualSliderComponentSlidesMediaImage {
    srcMobile
    srcTablet
    srcDesktop
    indent
  }

  fragment VisualSliderComponentSlidesMediaVideoDeepNesting on VisualSliderComponentSlidesMediaVideo {
    srcMobile
    srcTablet
    srcDesktop
  }

  fragment VisualSliderComponentSlidesBoxDeepNesting on VisualSliderComponentSlidesBox {
    enabled
    headline
    text
    link {
      ...VisualSliderComponentSlidesBoxLinkDeepNesting
    }
    indent
    horizontal
    vertical
    background
  }

  fragment VisualSliderComponentSlidesBoxLinkDeepNesting on VisualSliderComponentSlidesBoxLink {
    enabled
  }

  fragment ContactComponentDeepNesting on ContactComponent {
    title
    subtitle
    phone
    email
    copy
    type
  }

  fragment StorytellingComponentDeepNesting on StorytellingComponent {
    backgroundImage
    backgroundColor
    full
    image {
      ...StorytellingComponentImageDeepNesting
    }
    box {
      ...StorytellingComponentBoxDeepNesting
    }
    type
  }

  fragment StorytellingComponentImageDeepNesting on StorytellingComponentImage {
    source
    ratio
    vAlign
    hAlign
    order {
      ...StorytellingComponentImageOrderDeepNesting
    }
  }

  fragment StorytellingComponentImageOrderDeepNesting on StorytellingComponentImageOrder {
    mobileImageLast
    desktopImageLast
  }

  fragment StorytellingComponentBoxDeepNesting on StorytellingComponentBox {
    headline {
      ...HeadlineComponentDeepNesting
    }
    text
    textAlign
    textColor
    vAlign
    hAlign
    link {
      ...LinkButtonComponentDeepNesting
    }
  }

  fragment CollapsibleBoxComponentDeepNesting on CollapsibleBoxComponent {
    summary
    text
    type
  }

  fragment CountUpComponentDeepNesting on CountUpComponent {
    to
    icon {
      ...IconComponentDeepNesting
    }
    topic
    text
    link {
      ...LinkButtonComponentDeepNesting
    }
    type
  }

  fragment TextMediaComponentDeepNesting on TextMediaComponent {
    text
    mediaAlignment
    type
  }

  fragment TextMediaComponentMedia0DeepNesting on TextMediaComponentMedia0 {
    video {
      ...TextMediaComponentMedia0VideoDeepNesting
    }
    full
  }

  fragment TextMediaComponentMedia0VideoDeepNesting on TextMediaComponentMedia0Video {
    src
    iframe
    title
    width
    height
  }

  fragment TextMediaComponentMedia1DeepNesting on TextMediaComponentMedia1 {
    image {
      ...PictureComponentDeepNesting
    }
    full
  }

  fragment TextMediaComponentMedia2DeepNesting on TextMediaComponentMedia2 {
    lightboxImage {
      ...LightboxLazyImageComponentDeepNesting
    }
    full
  }

  fragment TeaserBoxComponentDeepNesting on TeaserBoxComponent {
    topic
    text
    darkStyle
    link {
      ...TeaserBoxComponentLinkDeepNesting
    }
    type
    image
    ratio
    imageSpacing
  }

  fragment TeaserBoxComponentLinkDeepNesting on TeaserBoxComponentLink {
    hidden
  }

  fragment TeaserRowComponentDeepNesting on TeaserRowComponent {
    topic
    text
    darkStyle
    link {
      ...TeaserRowComponentLinkDeepNesting
    }
    type
  }

  fragment TeaserRowComponentLinkDeepNesting on TeaserRowComponentLink {
    hidden
  }

  fragment SectionComponentDeepNesting on SectionComponent {
    width
    gutter
    mode
    type
    background
    spaceBefore
    spaceAfter
    headline {
      ...HeadlineComponentDeepNesting
    }
  }

  fragment SlideDeepNesting on Slide {
    slideComponent
    previewComponent
    previewLabel
    type
  }

  fragment SliderComponentDeepNesting on SliderComponent {
    autoplay
    className
    component
    arrows
    type
  }

  fragment TeaserComponentDeepNesting on TeaserComponent {
    topic
    text
    darkStyle
    link {
      ...TeaserComponentLinkDeepNesting
    }
    type
  }

  fragment TeaserComponentLinkDeepNesting on TeaserComponentLink {
    hidden
  }

  fragment VisualSlidePreviewComponentDeepNesting on VisualSlidePreviewComponent {
    previewLabel
    type
  }
`;
